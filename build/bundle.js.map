{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../src/Genres.svelte","../../node_modules/chart.js/auto/auto.js","../../node_modules/d3-fetch/src/json.js","../../node_modules/d3-zoom/src/transform.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.57.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\r\n    import { onMount } from 'svelte';\r\n    import Chart from 'chart.js/auto';    \r\n    export let genre_data;\r\n    \r\n    let genre_counts = {};\r\n    let small_genres = {}; \r\n\r\n    for (let i = 0; i < genre_data.length; i++) {\r\n        let genres = genre_data[i].genres.split(',');\r\n        for (let j = 0; j < genres.length; j++) {\r\n            let category = genres[j].trim();\r\n            if (category in genre_counts) {\r\n                genre_counts[category] += 1;\r\n            } else {\r\n                genre_counts[category] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    let total_count = 0;\r\n    const MIN_COUNT = 4000; \r\n    Object.keys(genre_counts).forEach((key) => {\r\n        let count = genre_counts[key];\r\n        if (count < MIN_COUNT) {\r\n            small_genres[key] = count;\r\n            delete genre_counts[key];\r\n        } else {\r\n            total_count += count;\r\n        }\r\n    });\r\n    genre_counts['Other'] = Object.values(small_genres).reduce((a, b) => a + b, 0);\r\n    small_genres = Object.entries(small_genres).sort((a, b) => b[1] - a[1]);\r\n\r\n    let chart;\r\n\r\n    const options = {\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: function(context) {\r\n                        let label = context.label || '';\r\n                        let value = context.parsed || 0;\r\n                        let total = context.dataset.data.reduce((acc, val) => acc + val, 0);\r\n                        let percent = total > 0 ? (value / total) * 100 : 0;\r\n                        return label + ': ' + value + ' (' + percent.toFixed(2) + '%)'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n   \r\n\r\n    onMount(() => {\r\n        const ctx = document.getElementById('myChart').getContext('2d');\r\n\r\n        chart = new Chart(ctx, {\r\n            type: 'pie',\r\n            data: {\r\n                labels: Object.keys(genre_counts),\r\n                datasets: [{\r\n                    data: Object.values(genre_counts),\r\n                    backgroundColor: [\r\n                        '#FF6384',\r\n                        '#36A2EB',\r\n                        '#FFCE56',\r\n                        '#8B008B',\r\n                        '#008080',\r\n                        '#FF8C00',\r\n                        '#FFD700',\r\n                        '#90EE90',\r\n                        '#9400D3',\r\n                        '#FA8072',\r\n                        '#00CED1',\r\n                        '#1E90FF',\r\n                        '#FFE4C4',\r\n                        '#CD5C5C',\r\n                        '#8FBC8F',\r\n                        '#4B0082',\r\n                        '#7B68EE',\r\n                        '#00FA9A',\r\n                        '#FF00FF'\r\n                    ]\r\n                }]\r\n            },\r\n            options: options\r\n        });\r\n    });\r\n\r\n    function destroyChart() {\r\n        chart.destroy();\r\n    }\r\n</script>\r\n\r\n    <div class='container'>\r\n        <canvas id=\"myChart\"></canvas>\r\n    \r\n        \r\n        {#if small_genres.length > 0}\r\n            <p>The following categories have less than {MIN_COUNT} entries and are not shown on the chart (clumped into the Other category):</p>\r\n            <ul>\r\n                {#each small_genres as [key, value]}\r\n                    <li>{key}: {value}</li>\r\n                {/each}\r\n            </ul>\r\n        {/if}\r\n    </div>\r\n\r\n    <p>I was surprised to see that Indie games was leading the pack over the likes of Action or Casual, though I suppose this can be attributed to indie games often being smaller scale.</p>\r\n    <p>I also thought there would be way more Free to Play games, but that's evidently not the case.</p>\r\n\r\n    <style>\r\n\r\n        canvas {\r\n\r\n            max-width: 500px;\r\n            max-height: 500px;\r\n            width: 100%;\r\n            height: auto;\r\n        }\r\n\r\n\r\n    </style>\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","<script>\r\n\timport { onMount } from \"svelte\";\r\n\timport Genres from \"./Genres.svelte\";\r\n\timport * as d3 from \"d3\";\r\n\t\r\n\tlet data;\r\n\tlet genre_data;\r\n\t\r\n\tonMount(async () => {\r\n\t  data = await d3.json('./genre_data.json')\r\n\t  genre_data = data.filter(d => d.genres);\r\n\t});\r\n  </script>\r\n  \r\n  <div>\r\n\t<h1>Playing with Data #1: Steam Games</h1>\r\n\t<p><i>Source data can be found <a href=\"https://github.com/leinstay/steamdb\">here</a>, and source code <a href='https://github.com/unoptimal/pwd-1-steam-games'>here</a>.</i></p>\r\n\t<p><i>by <a href='http://unoptimal.com/'>unoptimal</a></i></p>\r\n\r\n\t<p>What's the distribution of genres of Steam games (as of December 2022)? Let's find out.</p>\r\n    <p>I've excluded one entry from initial dataset since the genres were in Russian.</p>\r\n    <p>Also, it's worthing noting that many games have multiple genres.</p>\r\n\r\n\t{#if genre_data}\r\n\t\t<Genres {genre_data} />\r\n\t{:else}\r\n\t\t<p>Loading data...</p>\r\n\t{/if}\r\n</div>\r\n\r\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","isShort","r","g","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","undefined","hexString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","key","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","MIN_COUNT","ul","iterations","li","t0","t0_value","t2","t2_value","create_if_block","div","genre_data","genre_counts","small_genres","genres","category","trim","toFixed","responseJson","response","status","statusText","json","Transform","p3","async","fetch","d3.json","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY"],"mappings":"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","x_google_ignoreList":[0,1,2,3,5,6,7]}